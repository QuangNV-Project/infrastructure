version: '3.8'

services:
  
  # Databases
  mysql:
    image: mysql:8.0
    container_name: mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PROD_PASS}
      MYSQL_ROOT_HOST: "${MYSQL_ROOT_HOST}:%"
    ports:
      - "${MYSQL_PROD_PORT}:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
    networks:
      - prod-network

  mongodb:
    image: mongo:7.0
    container_name: mongodb-prod
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_PROD_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PROD_PASSWORD}
    ports:
      - "${MONGO_PROD_PORT}:27017"
    volumes:
      - mongodb_prod_data:/data/db
    networks:
      - prod-network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-prod
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_PROD_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PROD_PASSWORD}
    ports:
      - "${RABBITMQ_PROD_PORT}:5672"
      - "${RABBITMQ_PROD_MANAGEMENT_PORT}:15672"
    volumes:
      - rabbitmq_prod_data:/var/lib/rabbitmq
    networks:
      - prod-network

  redis:
    image: redis:7.2-alpine
    container_name: redis-prod
    ports:
      - "${REDIS_PROD_PORT}:6379"
    volumes:
      - redis_prod_data:/data
    networks:
      - prod-network
    command: redis-server --appendonly yes

volumes:
  mysql_prod_data:
  mongodb_prod_data:
  rabbitmq_prod_data:
  redis_prod_data:

networks:
  prod-network:
    driver: bridge